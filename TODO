TODO

- wikiperso : Better default page


 - EXPÃ‰RIMENTAL : L'utilisateur nobody n'a aucun droit
 (Ã©lÃ©ment incomparable avec tt le monde).
 Je renvoie Ã§a dans get_group_by_name quand le group n'existe pas,
 plutÃ´t que NoSuchUser. Est-ce OK ?
 Est-ce qu'il faut renvoyer Ã§a aussi ailleurs ?
 

 - pb with postgresql 8.1: offset is int32 (j'ai fait un hack pour tourner
 sur helium) -> imposer postgresql >= 8.2 ?

 - Wiki (serious??): it is possible to create a page toto and toto/titi
 toto may be a directory or a page! That's probably a problem?
 (in Eliom that's not possible)

 - wikipages : allow to register redirections instead of pages
 (http redirections or several URLs for same page)

 - Log the connection of users!

 - replace Actions by redirections to avoid the problem of reposting POST data
 (how to give informations to fallbacks?)

 - NEW 27/06/2008 There is now a wiki created automatically for the 
 administration boxes. For now used only for displaying wikisyntax,
 but should be used for all admin pages?
 It is not bound to any URL.
 Problems: 
   - box identifiers are fixed (dangerous!)
   - only one wikisyntax box for all wikis
   - need to pass the id (wiki, boxes) to the constructor of wikiboxes
   - where to create admin services that need such boxes?
   - How to set the id of these boxes?
 Warning: We must think very carefully about this
 and be very carefull not breaking existing sites when modifying this.

 - IMPORTANT WARNING: the cache may cause inconsistencies of data
 if several processes are modifying the database
 - Make a command to clean the cache? Clean the cache every 6 seconds?
 - Cache or not to cache?
 What data is it necessary to cache??
 How to be sure that data are removed from the cache when they are modified?
 Wiki_sql.get_readers (set ... writers ... admins)
 are not cached for now!
 User_sql.find_user is not cached with ~name parameter for now.

 - Use userid instead of userdata wherever it is possible

 - I removed all that depends on module Services for now Vincent 2008/04/15
(dynamic creation of services)

 - pas clair la distinction entre forum et forum_sql, user et usr_sql,
 notamment pour l'abstraction des types forum, group, user...

 - uniformize labels (put labels everywhere, and always the same name for the
 same type)

 - Give up with ocamlduce? For now, no.

 - Take care of exception (database ...) more carefully and write error messages

 - Faut tout revoir pour uniformiser. C'est vraiment le bordel.

 - Not really clear where to use objects or functors. 
 Do we need overriding and late binding?

 - Uniformize the place where permissions are checked.
 Is it in the widgets? In the db interface?

 - Put sp in sd to avoid passing both parameters everywhere?
 Warning: sd is transmitted by actions to subsequent services, but sp must not!
 - session data: the mechnanism is too complex, dangerous (we must think to 
 keep it up to date) and not really useful for now.
 Remove it completely and rely on global cache?

 - Pourquoi les constructeurs des types "role" de forum ont des valeurs ?

 - internationalisation

 - warning: if we load ocsisite several times in the same site, it will fail.
 Is it a problem? Can we write a better error message?

How to make sure that:
 - user information is taken only once, for example role in the wiki, 
 in the forum and only if needed (lazy?)? And even if it is after an action.
 - all widgets have a ?classe parameter?
 - all database errors are taken into account?
 Wrap all db result in a kind of exception monad?
 - all actions will send session-data to the following service?

Wiki:
 - Box version numbers must start at 1 for each box, 
 and be consecutive!!
 - !!!!!What if two users modify the same page at the same time?
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 - Allow to specify manually the wikibox number associated to a page
 (to have several pages with the same box)
 (ask the user to specify either the wikibox number or another page name)
 + same for page/wiki css (if I want the same css for several wikis for ex)
 + allow to register some kind of redirection (like wikipedia)
 (basically the same, but with something that shows that it is a redirection)
 - Make a button to hide/show the View/Edit/History bars if we are connected and
 do not want to be editor
 - Revoir le changement des droits. Quels droits ? Qui peut les changer ?
 Faut-il sauver les droits pour chaque version ???
 - Hierarchical menu box (as in Eliom_tools)
 - not possible to make all kinds of links in menus for now
  (like <<nonattachedlink>> or <<link>>)
 - No right verification on css. Everyone can get them.
 - CSS have no history for now. Link css history with page/box history?
 -------> Il faut probablement utiliser des wikiboxes pour les css
 avant une colonne supplémentaire "content-type" qui pourrait être wikicreole
 ou css ou autre.
 - not possible to change the css for one wikibox for now, just for the whole
 page. Users cannot personnalize the css if they do not have the right to 
 modify the whole page css :-(
 - Most of options for ocsiwiki in ocsigen.conf have effect only the first
 time (when the wiki is not created). We should better: either give the 
 possibility to change the values from the config file (more difficult) or
 remove these config options and rely on defaults and an admin page
 to change rights (but for now that page does not exist, 
 so I leave this as this).

 - There is an experimental non-attached service that displays wikipages
 as if it were the usual (suffix) service. But editing wikiboxes does not
 work inside this page!!!!!!!!!!!
 To fix this, we probably need a new feature in Eliom:
 "non-attached parameters"???

 - Revoir la partie dynamique de la wikisyntaxe <<cond>> etc ...

 - Is it possible to cache __after__ having decoded the wikisyntax?
 (pb: some parts are dynamic and depends on the user or the request)

 - Add a detailed wikisyntax help (with all extensions).
 May be as a static wikicreole file, that would be loaded dynamically?

 - Give rights to an user that does not exist does nothing, even if it
 is a valid pam user... Create the pam user automatically???

Users:
 - IMPORTANT: (SECURITÉ !!!) Il faut empêcher un utilisateur ou IP
  qui vient d'essayer de se connecter de recommencer avant 2s!!!!! 
  quelle que soit la méthode d'authentification
  cf lwt_lib
 - IMPORTANT: Save a hash of passwords in the db, not the password itself
 - Impossible to give rights to users who do not exist for now (if using
 external authentication, the user is created the first time she logs in ...)
 May be create the user automatically if she exists on the system when we
 we to give rights.
 - PAM or LDAP: not really clean
 Use "plugable" authentication methods
 (to avoid Session_manager.sessionmanager_nis _pam etc.)
 modularize (use objects?)
 make this configurable from config file,
 implement LDAP.

User widgets:
 - clean everything
 - Use a class model closer to wiki? (and remove Widget.ml?)
 - Probably define connection/deconnection actions here and not in 
 session_manager? (cf wiki_widgets).
 - account creation: it is recommended to ask for an email 
(and create an account) only when necessary, for example if the users 
want to perform an action that is not possible without beeing connected. 
Avoid a large registration form to fill before beeing able to do anything ...
 - there is a version of the class login_widget with registration of
 users, called login_widget_basic_user_creation. Make possible to choose
 which one we want from config file of ocsisite.

Session manager:
 - clean everything
 - probably merge into user_widgets? or users? or not ...

Problems due to Postgresql:
 - Errors are just strings => only one exception
 - very difficult to abstract types (like Users.group)
 because the db returns int32

Wikisyntax:
 - extensible?
 - AST interpreter must be configurable (for ex if we want to forbid images in
 forum messages, or some kind of boxes (wikibox in forum message...))

Wiki extensions:
 - add_a_content_extension a_link_extension add_block_extension ...
 complex and not completely satisfactory. For example a_link_extension returns
 (string * XML Lwt.t) instead of (string * XML) Lwt.t
 - I don't know how to put wikisyntax inside inline extensions!
 (as xml_of_wiki returns block!)
 For now it looks like a hack.
 (for ex to use wikisyntax in <<logoutlink>> or <<nonattachedlink>>
 or <<link>> or <<menu>>)

Forum:
 - clean everything
 - type role is in forum_sql.ml whereas in wiki.ml
 Can we put it in forum.ml
 - Use a class and service model closer to wiki and remove Widget.ml?
 For example use actions for sending messages?
 (Do not forget to transmit session_data!)
 - Use Widget.widget_with_error_box

Ocsimore_lib:
 - De quoi on se sert ?
 - interface

Ocamlduce:
 - I am worried about the efficiency of sequence concatenation in ocamlduce
 for example in the creole parser ... They seem to be pairs so it must be ok, 
 but ... (pairs of what?)
 For example in creole_parser.mly there is several times:
 {{ map {: s :} with i -> i }}. Is it ok?

Creole:
 - How to write a <<span>> extension? (inline)

<ocsigen>

  <server>

    <!-- ____________________________________________________________ -->
    <!-- First part: basic configuration                              -->

    <port>8080</port>              <!-- The port for the server -->
    <logdir>./var/log</logdir>
    <datadir>./var/lib</datadir>


    <charset>utf-8</charset>      <!-- Default charset for pages -->

    <commandpipe>/tmp/cpipe</commandpipe>

    <!--
    <uploaddir></uploaddir>
     -->
      <!-- Where files are to be uploaded (default: none) -->

    <!--
    <maxuploadfilesize>2Mo</maxuploadfilesize>
     -->
      <!-- Max size of files sent to the server
           ("infinity" or using SI or binary units,
           e.g. 10 10B 10o 10ko 10kB 10kiB 10MiB 10TB ...) -->

    <!--
    <maxrequestbodysize>8Mo</maxrequestbodysize>
     -->
    <!--
    <maxuploadfilesize>2Mo</maxuploadfilesize>
     -->
      <!-- Max size of files sent to the server
           ("infinity" or using SI or binary units,
           e.g. 10 10B 10o 10ko 10kB 10kiB 10MiB 10TB ...) -->

    <!--
    <maxrequestbodysize>8Mo</maxrequestbodysize>
     -->
      <!-- Max size for the body of a request
          ("infinity" or using SI or binary units) -->

    <!--
    <mimefile>/etc/mime.types</mimefile>
    -->
      <!-- The mime types file
           used for sending static pages -->

    <!--
    <debugmode/>
    -->
      <!-- If you want to print the exceptions on error 500 pages
           (use only for debug) -->

    <!-- If you want to use HTTPS:
    <ssl>
       <certificate>path_to/cert.pem</certificate>
       <privatekey>path_to/privkey.pem</privatekey>
    </ssl>

    To create a 1024-bit private key to use when creating your CA.:
    openssl genrsa -des3 -out privkey.pem 1024

    To create a master certificate based on this key, to use when signing other
    certificates:
    openssl req -new -x509 -days 1001 -key privkey.pem -out cert.pem

    If you don't want to be asked for a password at start-up, you can
    uncrypt the private key (if you consider it is safe ...):
    openssl rsa -in privkey.pem -out privkey-unsec.pem

    -->







    <!-- ____________________________________________________________ -->
    <!-- Second part: Ocsigen's Extensions                            -->

    <!--
         Ocsigen does not do anything without some extensions loaded.
         For example, you need the extension staticmod for serving static pages.

         Dynlink here all the extensions for Ocsigen using the tag <extension>.

         The order is usually not significant.

         Extensions define new XML tags for this configuration file.
         Use them in the <site> sections below.

         If you don't have any extension, no page will be generated
         (but if you link the extensions statically).

         Extensions will be loaded only once, even if they occur in several
         configurations files, or if the configuration file is reloaded.
     -->

     <!-- Path to Ocsigen's specific META directories -->
    <findlib path="/usr/local/lib/ocsigen/METAS"/>


    <!-- _______ Loading redirectmod _______ -->
    <!-- If you want to define HTTP redirections in this config file: -->
    <extension findlib-package="ocsigen_ext.redirectmod"/>



    <!-- _______ Loading revproxy _______ -->
    <!--
    If you want to define reverse proxy redirections in this config file:
    <extension findlib-package="ocsigen_ext.revproxy"/>
     -->


    <!-- _______ Loading accesscontrol _______ -->
    <!-- If you want to restrict access for some sites:
         (see http://www.ocsigen.org/trac/wiki/AccessControl) -->
    <extension findlib-package="ocsigen_ext.accesscontrol"/>

    <!-- _______ Loading authbasic _______ -->
    <!-- If you want to use Basic HTTP Authentication:
         (see http://www.ocsigen.org/trac/wiki/AuthBasic)
    <extension findlib-package="ocsigen_ext.authbasic"/> -->

    <!-- _______ Loading cgimod _______ -->
    <!--
    If you want to use CGI scripts:
    <extension findlib-package="ocsigen_ext.cgimod"/>
     -->

    <!-- Or, if you want to set options for cgimod: -->
    <!--
    <extension findlib-package="ocsigen_ext.cgimod">
      <cgitimeout value="30">     <!-- Timeout for CGI scripts -->
    </extension>
     -->



    <!-- _______ Loading staticmod _______ -->
    <!-- If you want to serve static files: -->
    <extension findlib-package="ocsigen_ext.staticmod"/>



    <!-- _______ Loading Eliom _______ -->
    <!-- If you need Eliom (dynamic OCaml pages),
         first load ocsipersist (sqlite or dbm version): -->

    <extension findlib-package="ocsigen_ext.ocsipersist-sqlite">
      <!-- If you want to specify the SQLITE database file yourself:
      <database file="/var/lib/ocsigen/ocsidb"/>
      -->
    </extension>

    <!-- You may want to use DBM instead of SQLite (if compiled) : -->
    <!--
    <extension findlib-package="ocsigen_ext.ocsipersist-dbm">
      <store dir="/var/lib/ocsigen"/> <!-- The directory for data (optional) -->
      <ocsidbm name="/usr/lib/ocsigen/extensions/ocsidbm"/> <!-- The data server process (optional) -->
    </extension>
    -->

    <!-- Now you can load Eliom itself: -->
    <extension findlib-package="ocsigen_ext.eliom"/>

    <!--
      If you want to set some options for Eliom, replace last line by
      something like:

    <extension findlib-package="ocsigen_ext.eliom">
      <timeout value="7200"/>      <!-- The default timeout for
                                   volatile (in memory) sessions.
                                   value="infinity" means that the session will
                                   never finish.
                                   Note that each eliom module may set its own
                                   default, that will override this one. -->
      <persistenttimeout value="7200"/>
                                  <!-- Idem for persistent session data -->
      <datatimeout value="7200"/> <!-- Like <timeout>, but for in memory data
                                   sessions only
                                   (not service sessions). -->
      <servicetimeout value="7200"/> <!-- Like <timeout>, but for service
                                   sessions only
                                   (not in memory data  sessions). -->
      <sessiongcfrequency value="7200"/> <!-- Time between two garbage
                                   collections of sessions, in seconds (default
                                   3600) "infinity" means no GC of session.
                                   Note that each eliom module may set its own
                                   default, that will override this one. -->
      <persistentsessiongcfrequency value="86400"/> <!-- Time between two
                                   garbage collections of persistent sessions,
                                   in seconds (default 86400.) "infinity"
                                   means no GC of session.
                                   Note that each eliom module may set its own
                                   default, that will override this one. -->
      <servicesessiongcfrequency value="7200"/> <!-- Like <sessiongcfrequency>,
                                   but for service sessions only -->
      <datasessiongcfrequency value="7200"/> <!-- Like <sessiongcfrequency>,
                                   but for "in memory data" sessions only -->
    </extension>
    -->



    <!-- If Ocsigen is compiled with Ocamlduce support,
        and you want to use it, add: -->
    <extension findlib-package="ocsigen_ext.eliom_duce"/>



    <!-- _______ Loading deflatemod _______ -->
    <!--
      Deflatemod - compressing data before sending (deflate and gzip)
      Parameters are optionnal; here, they are set to their default values.

      <extension findlib-package="ocsigen_ext.deflatemod">
        <compress level="6" /> <!-- 1 = faster;
                                    9 = best compression;
                                    0 = no compression -->
        <buffer size="1024" /> <!-- You shouldn't need to change this one -->
      </extension>

    -->




    <!-- _______ Loading other libraries _______ -->
    <!--

    If you want to load other Ocaml modules, either use one of:

    <extension module="...PATH TO.../toto.cma"/>
    <extension findlib-package="name_of_a_findlib_package"/>

    if you don't want them to be reloaded
    when you reload dynamically the sites,

    or:

    <library module="...PATH TO.../toto.cma"/>
    <library findlib-package="name_of_a_findlib_package"/>

    if you want them to be reloaded.

    Use <library> only for modules you want to be able to reload without
    shutting down the server!
    Extensions like eliom or staticmod cannot be used with <library>.
    Note that with findlib, dependencies are always loaded once, and only
    the last object file (cma/cmo) of the package may be loaded several times.

    If you use native dynlink, you must supply paths to .cmxs files with the
    module="..." form. Findlib forms are not affected.
    -->


   <extension findlib-package="pgocaml"/>
   <extension findlib-package="pam"/>
    <extension module="../ocsimore.cma">
      <passwordfile name="/etc/ocsigen/ocsimorepassword" />
    </extension>





    <!-- ____________________________________________________________ -->
    <!-- Third part: Configuration of virtual hosts and sites         -->

    <!-- Inclusion of all external configuration files matching *.conf
     from this directory (in alphabetical order): -->
    <extconf dir="/etc/ocsigen/conf.d" />
    <!-- Remember that modules loaded using <extension> are loaded
    only once. Thus you can load all the extensions you need from each
    configuration file.
     -->

    <host charset="utf-8">  <!-- First virtual host -->
      <!-- <host> is mandatory -->
      <!-- charset is optional (default "utf-8") -->

      <!-- Defining a sub-site -->
      <!-- The directory containing icons for directory listing
        (for directories configured "readable")
       -->
<!--
      <site path="ocsigenstuff" charset="iso-8859-1">
        <static dir="/var/www/ocsigen/ocsigenstuff" />
      </site>
-->
      <!-- path is the directory where the site is loaded -->
      <!-- charset is optional -->
      <!-- It is possible to define <site> inside <site> -->


      <static dir="../static" />
      <static dir="./static" />
      <eliom module="../ocsisite.cmo">
        <!-- optional arguments: -->

        <notsecure/> <!-- accept login with http or https (DANGEROUS!)
                          If you do not want that option, 
                          you need to configure HTTPS. -->

<!-- For PAM authentication:
        <pam service="ocsimore" /> <!-- Create your service file in /etc/pam.d -->
-->

        <basicusercreation registration_mail_from="Ocsimore" registration_mail_addr="ocsimore@somewhere.nowhere.com" registration_mail_subject="Ocsimore registration" groups="users"/>

      </eliom>

      <eliom module="../ocsiwiki.cmo">
        <name>My wiki</name>
        <path>/</path>
        
        <!-- The following options have effect only the first time,
        when creating the wiki.
        (And they may be removed in the future)
         -->
        <readers>anonymous</readers>
        <writers>users</writers>
        <rightsadm>admin</rightsadm>
        <wikiboxescreators>users</wikiboxescreators>
        <containeradm>admin</containeradm>
        <pagecreators>users</pagecreators>
        <csseditors>users</csseditors>
        <admins>admin</admins>
        <boxrights/>
      </eliom>


        <eliom module="./website.cma" />


    </host>

    <!--
    <host name="*.com">      <!-- Another virtual host -->
    </host>

       If your server has several host names, you can decide which sites will
       be available for each name, using virtual servers.
       To use virtual servers, specify for <host> the attribute 'name'.
       'name' is a string that may contain '*' characters.
       Examples: <host name="*">...</host> will match any host name (default).
       <host name="*.com:80">...</host> will match any host name finishing
       with '.com' on port 80.
       <host name="www.mysite.com www.mysite.org:*">...</host>
        will match only those two hostnames.
     -->










    <!-- ____________________________________________________________ -->
    <!-- Fourth part: various settings                                -->

    <!-- Change the following values only if you know what you are doing! -->
    <!-- <maxconnected>500</maxconnected> Max number of simultaneous connections -->
    <!-- <clienttimeout>10</clienttimeout> Timeout when a client is silent during while doing a request (or for keep alive) -->
    <!-- <servertimeout>100</servertimeout> When using Ocsigen as a client: Timeout when a server is silent during answering a request (or for keep alive) -->
    <!-- <netbuffersize>8192</netbuffersize> Size of the input buffer (sockets) It is also the maximum size of headers and post data -->
    <!-- <filebuffersize>8192</filebuffersize> Size of the buffer for reading files -->
    <!-- <minthreads>10</minthreads> Minimum size of the detached threads pool (default 10) -->
    <!-- <maxthreads>1000</maxthreads> Maximal size of the detached threads pool (default 300) -->
    <!-- <maxdetachedcomputationsqueued>100</maxdetachedcomputationsqueued> Size of the queue of computations waiting a detached thread (default 100) -->
    <!-- <commandpipe>/var/run/ocsigen_command</commandpipe> Name of the pipe used to command the server -->
    <!-- <respectpipeline/> If this line is present, one request will be sent to extensions only when the server is sure that the previous one on the same connection has been taken by an extension. By default, the order may be changed. -->

  </server>

</ocsigen>
